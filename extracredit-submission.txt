# 15-445/645 (Fall 2017) -- Extra Credit
# System: MemSQL

---------------------------------------

## Part 1 - Installation

1. You will need to launch an instance with MemSQL. The easiest way to do this is to use the following link 
	https://aws.amazon.com/marketplace/pp/B011MEZL88
This will configure and launch a single node MemSQL instance with all its dependencies installed 
1.5 After launching this, you should go to AWS and expand the EBS volume size. To do this click on your running instance, click description, then scroll down to root device. Click on the dev/sda volume and then click on the EBS id. Then click on the ebs volume, click Actions, modify volume and expand it to 64 gb. 
2. You will need to install git, ant, and java8 to run OLTP bench. 

# Install git
sudo apt-get update
sudo apt-get -y install git

# Install Ant
sudo apt-get install -y ant

# Install Java (http://tipsonubuntu.com/2016/07/31/install-oracle-java-8-9-ubuntu-16-04-linux-mint-18/)
sudo add-apt-repository ppa:webupd8team/java
# PRESS ENTER
sudo apt update; sudo apt install oracle-java8-installer
# When prompted, select the <OK> option, and Accept the terms and conditions
javac -version
# Should correctly print a java version 1.8+

# Now just clone the OLTP repository and you should be good to go :)


# If you are running the TPCH benchmark, you will need to get dbgen installed
# You will need to download the dbgen zip file from tpc.com. You can download it from (you will need to create an account):
# http://www.tpc.org/tpc_documents_current_versions/download_programs/tools-download-request.asp?bm_type=TPC-H&bm_vers=2.17.3&mode=CURRENT-ONLY

unzip dbgen.zip
cd 2.17.3/dbgen
cp makefile.suite makefile
vim makefile
# Search for “CC” and change the variables as follows:
CC      = gcc
DATABASE= SQLSERVER
MACHINE = LINUX
WORKLOAD = TPCH

make
./dbgen -s <SCALE_FACTOR> -v
mkdir ../../data
mkdir ../../data/tpch1
mv *.tbl ../../data/tpch1/



---------------------------------------

## Part 2 - System Configuration

MemSQL does not allow many system variables to be modified. Those that could produce better performance were either set to the optimal values by default or were read only. Tuning other variables resulted in worse performance than the out of the box configuration. Thus, we did perform any tuning to our system with system variables. 

We did, however, run the TPCH benchmark using MemSQL’s column store configuration, which is better suited for OLAP workloads.

---------------------------------------

## Part 3 - Benchmarks

For each benchmark that you evaluated with your DBMS, provide the student name and AndrewId of the person that worked on it. Also provide an overview of the changes that you made to get the benchmark to work with the OLTP-Bench framework.

*****

### Benchmark 1: $(TPCH)
Student: Ajay Benno abenno
List any modifications that you had to make to either the benchmark DDL, SQL dialects, or worker/loader in order to get the benchmark to work.

For every date object, (i.e. date ‘2017-01-01’), surround the date string with parenthesis: data(‘2017-0101’).
The queries that need this change are: 1,3,4,5,6,7,8,10,12,14,20

Disable Query #7,#8,#15, MemSQL does not fully support views.

To disable this query we went into the Q15.java file in queries and commented out the try statement in the run method. Thus we returned null. For Q7 and Q8, you can just return a new SQLStmt("SELECT 1");

We also had to make all the tables be stored on disk. To do this we edited the ddl file and added keys which used the columnstore engine. This issue we faced here was we werent able to natively load this into memsql with the ./oltpbench command. So instead we manually load this in with the following command : 

memsql < src/com/oltpbenchmark/benchmarks/tpch/ddls/tpch-memsql-ddl.sql


Then to run the benchmark execute the following commands
./oltpbenchmark -b tpch -c config/memsql_tpch_config.xml --load=true
./oltpbenchmark -b tpch -c config/memsql_tpch_config.xml --execute=true -s 10 


*****

### Benchmark 2: $(TPCC)
Student: Gustavo Angulo <gangulo>

Comment out the foreign key declarations. MemSQL does not support foreign keys.

*****

